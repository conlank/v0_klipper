#####################################################################
#	Macros
#####################################################################

# Conditional G28
[gcode_macro CG28]
gcode:
  G91
  {% if printer.toolhead.homed_axes != "xyz" %}
    #LOWERCURRENT
    G90
    G28
    #RESETCURRENT
  {% endif %}


# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro RESET_EXTRUDER]
gcode:
    G92 E0 ; reset extruder

# Park bed for heatsoaking
[gcode_macro PARK]
#default_parameter_FORCE: 0
gcode:
  {% if printer.idle_timeout.state != "Printing" or FORCE|default(0)|int == 1 %}
    CG28                           ; Home if not already homed
    SAVE_GCODE_STATE NAME=PARK
    G90                            ; absolute positioning
    G0 X60 Y60 Z20 F5000           ; Move to position
    RESTORE_GCODE_STATE NAME=PARK
  {% else %}
    { action_respond_info("PARK disabled while printing!") }
  {% endif %}

[gcode_macro PURGE_LINE]
#   A purge line on the front tab of the bed to prime the extruder
gcode:
  G92 E0.0 ; reset extruder distance position
  G1 X0 Y0.25 F2400 ; go outside print area
  G1 Z0.2 F1800
  G1 X30 E5.0 F1000 ; intro line
  G1 X75 E12.0 F1000 ; intro line
  G92 E0                         ; zero extruder   
  G1 Z2 E-0.1 F3000 ; move nozzle up and retract tiny bit
  G92 E0.0 ; reset extruder distance position


[gcode_macro PRINT_START]
gcode:
  {% set bed_temp = params.BED|default(60)|int %}
  {% set ext_temp = params.EXTRUDER|default(180)|int %}
  {% set chamber_check = params.CHAMBER|default(1)|int %}
  M117 Homing...
  G28
  G1 Z20 F3000                   ; move nozzle away from bed
  # {% if printer.extruder.temperature|int > 39 and bed_temp > 80 and chamber_check == 1 %}
  #    M117 Toolhead too hot to use as chamber temperature probe, waiting to cool down...
  #    G0 X60 Y60 Z30                                ; move toolhead to centre
  #    M106 S104
  #    TEMPERATURE_WAIT SENSOR=chamber_temp MAXIMUM=39
  # {% endif %}
  M117 Heating Bed...
  G0 X60 Y60 Z15                                   ; move toolhead to centre
  M140 S{bed_temp}                         ; set bed final temp
  M190 S{bed_temp}                         ; wait for bed final temp
  {% if bed_temp > 80 %}
    {% if printer["temperature_sensor chamber_temp"].temperature < chamber_check %}               ; Heat soak for ABS
    G0 X60 Y60 Z15                                   ; move toolhead to centre
    M106 S225                                   ; set part fan to 100% to warm chamber
    M117 Heat Soak: 42~degrees~
    COUNTDOWN TIME=60
    # TEMPERATURE_WAIT SENSOR=chamber_temp MINIMUM=42
    M117 Soak Complete!
    {% endif %}
  {% else %}
  M117 Heat Soak not required
  {% endif %}
  M106 S0                                   ; turn off part fan 
  M117 Heating Extruder...
  M109 S{ext_temp}                ; wait for extruder final temp
  PURGE_LINE
  RESET_EXTRUDER
  M117 Printing...


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X118 Y{max_y - 2} F3600          ; park nozzle at rear corner
    M84
    M117 Done Printing
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=40
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E280 F1800                    ; load bowden fast
   G1 E30 F300                  ; slower extrusion for hotend path
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-380 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[display_status]

[pause_resume]
recover_velocity: 150.0

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[delayed_gcode clear_display]
gcode:
    M117

[gcode_macro COUNTDOWN]
#default_parameter_MSG: "Time: "
#default_parameter_TIME: 10
gcode: 
    # countdown 
    {% for s in range(params.TIME|default(10)|int, 0, -1) %}
        # dwell 1 second
        G4 P1000
        # echo
        M117 Time: {s}s
        M118 Time: {s}s
    {% endfor %}

[gcode_macro BED_Screws_were_ADJUSTED]
gcode:
    ADJUSTED

[gcode_macro Bed_Screws_ACCEPT]
gcode:
    ACCEPT

[gcode_macro Z_ENDSTOP_CALIBRATE]
description: Level the bed using the center point.
rename_existing: Z_ENDSTOP_CALIBRATE_BASE
gcode:
    BED_MESH_CLEAR
    G90                   ; absolute positioning
    G1 X60 Y60 Z10        ; Move to position
    Z_ENDSTOP_CALIBRATE_BASE

[gcode_macro MAINTAINENCE]
description: Move the toolhead to the front of the printer for easy access.
gcode:
    SAVE_GCODE_STATE NAME=front
    G90                            ; absolute positioning
    G1 X60 Y0 Z60 F5000           ; Move to position
    RESTORE_GCODE_STATE NAME=front


[gcode_macro ZDOWN_1]
description: Move nozzle 1mm closer to the bed.
gcode:
    TESTZ Z=-1

[gcode_macro ZDOWN_01]
description: Move nozzle 0.1mm closer to the bed.
gcode:
    TESTZ Z=-0.1


[gcode_macro ZDOWN_001]
description: Move nozzle 0.01mm closer to the bed.
gcode:
    TESTZ Z=-0.01

[gcode_macro ZDOWN_0001]
description: Move nozzle 0.001mm closer to the bed.
gcode:
    TESTZ Z=-0.001


[gcode_macro ZUP_1]
description: Move nozzle 1mm further from the bed.
gcode:
    TESTZ Z=+1

[gcode_macro ZUP_01]
description: Move nozzle 0.1mm further from the bed.
gcode:
    TESTZ Z=+0.1


[gcode_macro ZUP_001]
description: Move nozzle 0.01mm further from the bed.
gcode:
    TESTZ Z=+0.01

[gcode_macro ZUP_0001]
description: Move nozzle 0.001mm further from the bed.
gcode:
    TESTZ Z=+0.001

[gcode_macro LIVE_Z_UP]
description: Move the gcode offset up.
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.001 MOVE=1

[gcode_macro LIVE_Z_DOWN]
description: Move the gcode offset down.
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.001 MOVE=1